#!/usr/bin/env python3

import curses
import signal
import time

joker = [
r"      ,",
r"    _\@)_       ___",
r"     /`\      .' -,'-.__,@",
r"    /        |     `).-'",
r"  _/       _\V^V^V^V/_",
r" | /\     .=// ^.^ \\=.",
r" /\ /     .'/| ._. |\'.",
r"/ /-`.       _\___/_",
r" |/\/\   _@->`   _  `<-@._",
r"   \  \.'  @-'`\( `'-,@   '-.",
r"    \      ,    @    , _.-   `\ ",
r"     \   .'|    :    |` /'. _.'",
r'      `"`   \   :    / /`\_|  @',
r"      @_  _.'`######`'-\_\.--;`",
r"      `-.`      /,     `, .-'",
r"      _.@--; .-'| '. ;-._;@",
r"    .'     @' _.'.  `@  \ ",
r"   |     _.-'`    '-.    \ ",
r"    '-._  `-._n_     )   |",
r"        `'-._ ) `-,.'   /",
r"             u-'--;`@ .'",
r"                  |  /",
r"                 ,\ /,",
r"                 )\.'/",
r"                /   (",
r"                \_.. '._.@",
r"                    `-.-'"
]
dog = [
r'''                     ,''',
r'''                ,.  | \ ''',
r'''               |: \ ; :\ ''',
r'''               :' ;\| ::\ ''',
r'''                \ : | `::\ ''',
r'''                _)  |   `:`.''',
r'''              ,' , `.    ;: ;''',
r'''            ,' ;:  ;"'  ,:: |_''',
r'''           /,   ` .    ;::: |:`-.__''',
r'''        _,' _o\  ,::.`:' ;  ;   . ' ''',
r'''    _,-'           `:.          ;""\,''',
r''' ,-'                     ,:         `-;,''',
r''' \,                       ;:           ;--._''',
r'''  `.______,-,----._     ,' ;:        ,/ ,  ,`''',
r'''         / /,-';'  \     ; `:      ,'/,::.:::''',
r'''       ,',;-'-'_,--;    ;   :.   ,',',;::::::''',
r'''      ( /___,-'     `.     ;::,,'o/  ,:::::::''',
r'''       `'             )    ;:,'o /  ;"-   -::''',
r'''                      \__ _,'o ,'         ,::''',
r'''                         ) `--'       ,..::::''',
r'''                         ; `.        ,:::::::''',
r'''                          ;  ``::.    :::::::'''
]
elephant = [
r'''             ___.-~"~-._   __....__''',
r'''           .'    `    \ ~"~        ``-.''',
r'''          /` _      )  `\              `\ ''',
r'''         /`  a)    /     |               `\ ''',
r'''        :`        /      |                 \ ''',
r'''   <`-._|`  .-.  (      /   .            `;\\          _.-~"~-.''',
r'''    `-. `--'_.'-.;\___/'   .      .       | \\       ;`a)   )  `\ ''',
r''' _     /:--`     |        /     /        .'  \\     /      /    |~=-=--.''',
r'''("\   /`/        |       '     '         /    ;`'._/ ,;_  |    /        ".''',
r'''`\'\_/`/         .\     /`~`=-.:        /     ``.,__/ ` `| `"~`           \ ''',
r'''  `._.'          /`\    |      `\      /(            .--'   /      /      |\ ''',
r'''                /  /\   |        `Y   /  \          /  ____/\     |      / .". ''',
r'''               J  /  Y  |         |  /`\  \        /__/  |  |`-...-\    |''',
r'''              /  |   |  |         |  |  |  |       '""   |  |      |`\  |''',
r'''             "---"  /___|        /___|  /__|             /__|     /__/__|''',
r'''                    '"""         '"""  '"""              '"""    '"""'""'''
]
horse = [
r'''        `.''',
r'''        | `._-._''',
r'''       /     `.  -'.''',
r'''     .'o  \    `.`-.-''',
r'''   .' .'         `-.`.',''',
r''' .'         |       `.`.`.''',
r'''().'    __.'.           `.`.             ''',
r''' \_ .--'     \             `-.__        ____.----._''',
r'''   "          \                 """"""""           `.''',
r'''               \   .                                 `.''',
r'''                \ '                                    \`-._''',
r'''                 /                                      L-  `._''',
r'''                |                          |            | )    `,''',
r'''                J                         |             |// |    \ ''',
r'''                 \        /               \             ).' / )   \ ''',
r'''                 `.                        \|          // //  /   |''',
r'''                 ('      |           ___.--'\         J //   / |  |\ ''',
r'''                .'      .---------'""      | \       J (| /  '   ' \`''',
r'''             .-'   _.-'"                   F  \|    /  ||(| '     | \ ''',
r'''            J  .-'"/                       F  J\    (  `\\\||  (  |||)''',
r'''             L |' /                       J   | \    L    ``)     '||`''',
r'''             | |.'                        /   )  \   \      |     |||''',
r'''             ) \                         /  .'    \   )      `.   (`|''',
r'''            /`. `-.                    .' .'       L J         `._ ``.''',
r'''           )`/ `.' |                 .' .'         | |             `-`''',
r'''         .' (    `.|                /` /           | |''',
r'''        `._.'                      /-("            | |''',
r'''                                  <_.'           .'  )''',
r'''                                           ` \ .' .-' ''',
r'''                                           -- '._.' ''',
]

obj_list = [joker, dog, elephant, horse]

pause = False

# Ignore Ctrl+c and Ctrl+Z
signal.signal(signal.SIGINT, signal.SIG_IGN)

def main(stdscr):
    for scroll_obj in obj_list:
        global pause
        curses.curs_set(0)        # Hide cursor
        stdscr.nodelay(True)      # Non-blocking input
        stdscr.clear()

        max_y, max_x = stdscr.getmaxyx()
        height = len(scroll_obj)
        width = max(len(line) for line in scroll_obj)

        y_pos = max_y // 2 - height // 2
        x_pos = max_x

        while x_pos > -width:
            if pause:
                key = stdscr.getch()
                if key == ord(' '):
                    if pause:
                        pause = False
                continue

            stdscr.clear()
            for i, line in enumerate(scroll_obj):
                y = y_pos + i
                if 0 <= y < max_y and x_pos < max_x:
                    visible_part = line[max(0, -x_pos):max_x - x_pos]
                    if visible_part:
                        stdscr.addstr(y, max(0, x_pos), visible_part)

            stdscr.refresh()
            time.sleep(0.05)
            x_pos -= 1

            key = stdscr.getch()
            if key == ord(' '):
                if not pause:
                    pause = True

curses.wrapper(main)
